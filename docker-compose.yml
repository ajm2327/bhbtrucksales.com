services:
  frontend:
    build:
      context: ./bhbtrucksales
      dockerfile: Dockerfile
    ports:
      - "80:80"
    depends_on:
      - backend
    restart: unless-stopped
    networks:
      - truck-sales-network

  backend:
    build:
      context: ./backend
      dockerfile: Dockerfile
    env_file:
      - ./backend/.env.production
    volumes:
      - truck-uploads:/app/uploads
      - truck-data:/app/data
    restart: unless-stopped
    networks:
      - truck-sales-network
    healthcheck:
      test: ["CMD", "node", "-e", "require('http').get('http://localhost:3001/api/health', (res) => { process.exit(res.statusCode === 200 ? 0 : 1) })"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s

volumes:
  truck-uploads:
    driver: local
  truck-data:
    driver: local

networks:
  truck-sales-network:
    driver: bridge